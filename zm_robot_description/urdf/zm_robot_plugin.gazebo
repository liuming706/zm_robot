<?xml version="1.0"?>
<robot>

  <!-- gazebo_mecanum plugin -->
  <gazebo>
    <plugin name="zm_robot_diff_drive" filename="libgazebo_mecanum_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <LeftRear>wheel_joint_1</LeftRear>
      <LeftFront>wheel_joint_2</LeftFront>
      <RightFront>wheel_joint_3</RightFront>
      <RightRear>wheel_joint_4</RightRear>
      <odometryRate>30</odometryRate>
      <publishWheelTF>false</publishWheelTF>
      <publishOdomTF>false</publishOdomTF>
      <WheelTorque>30</WheelTorque>
      <WheelSeparationW>0.5</WheelSeparationW>
      <WheelSeparationL>0.6</WheelSeparationL>
      <wheelAccel>10</wheelAccel>
      <wheelDiameter>0.13</wheelDiameter>
      <publishOdom>true</publishOdom>
      <isRollerModel>true</isRollerModel>
    </plugin>
  </gazebo>

  <!-- gazebo joint_state_publisher -->
  <gazebo>
    <plugin name="zm_robot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>joint_states:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheel_joint_1</joint_name>
      <joint_name>wheel_joint_2</joint_name>
      <joint_name>wheel_joint_3</joint_name>
      <joint_name>wheel_joint_4</joint_name>
      <joint_name>roller_1_1_joint</joint_name>
      <joint_name>roller_1_2_joint</joint_name>
      <joint_name>roller_1_3_joint</joint_name>
      <joint_name>roller_1_4_joint</joint_name>
      <joint_name>roller_1_5_joint</joint_name>
      <joint_name>roller_1_6_joint</joint_name>
      <joint_name>roller_1_7_joint</joint_name>
      <joint_name>roller_1_8_joint</joint_name>
      <joint_name>roller_1_9_joint</joint_name>
      <joint_name>roller_2_1_joint</joint_name>
      <joint_name>roller_2_2_joint</joint_name>
      <joint_name>roller_2_3_joint</joint_name>
      <joint_name>roller_2_4_joint</joint_name>
      <joint_name>roller_2_5_joint</joint_name>
      <joint_name>roller_2_6_joint</joint_name>
      <joint_name>roller_2_7_joint</joint_name>
      <joint_name>roller_2_8_joint</joint_name>
      <joint_name>roller_2_9_joint</joint_name>
      <joint_name>roller_3_1_joint</joint_name>
      <joint_name>roller_3_2_joint</joint_name>
      <joint_name>roller_3_3_joint</joint_name>
      <joint_name>roller_3_4_joint</joint_name>
      <joint_name>roller_3_5_joint</joint_name>
      <joint_name>roller_3_6_joint</joint_name>
      <joint_name>roller_3_7_joint</joint_name>
      <joint_name>roller_3_8_joint</joint_name>
      <joint_name>roller_3_9_joint</joint_name>
      <joint_name>roller_4_1_joint</joint_name>
      <joint_name>roller_4_2_joint</joint_name>
      <joint_name>roller_4_3_joint</joint_name>
      <joint_name>roller_4_4_joint</joint_name>
      <joint_name>roller_4_5_joint</joint_name>
      <joint_name>roller_4_6_joint</joint_name>
      <joint_name>roller_4_7_joint</joint_name>
      <joint_name>roller_4_8_joint</joint_name>
      <joint_name>roller_4_9_joint</joint_name>
    </plugin>
  </gazebo>

  <!-- base_link -->
  <gazebo reference="base_link">
    <selfCollide>false</selfCollide>
    <gravity>true</gravity>
    <mu1>10</mu1>
    <mu2>10</mu2>
    <kp>1e30</kp>
    <kd>1e20</kd>
    <material>Gazebo/Orange</material>
  </gazebo>


  <!-- sick LiDAR 0 -->
  <gazebo reference="sick_lidar0">
    <selfCollide>false</selfCollide>
    <gravity>true</gravity>
    <mu1>30</mu1>
    <mu2>30</mu2>
    <kp>1e60</kp>
    <kd>1e50</kd>
    <material>Gazebo/Yellow</material>
  </gazebo>

  <!-- sick LiDAR 1 -->
  <gazebo reference="sick_lidar1">
    <selfCollide>false</selfCollide>
    <gravity>true</gravity>
    <mu1>30</mu1>
    <mu2>30</mu2>
    <kp>1e60</kp>
    <kd>1e50</kd>
    <material>Gazebo/Yellow</material>
  </gazebo>

  <!-- Kinect V2 -->
  <gazebo reference="kinect_v2">
    <selfCollide>false</selfCollide>
    <gravity>true</gravity>
    <mu1>30</mu1>
    <mu2>30</mu2>
    <kp>1e60</kp>
    <kd>1e50</kd>
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- sick LiDAR 0 controller -->
  <gazebo reference="sick_lidar0">
    <sensor type="ray" name="sick_LiDAR0_sensor">
      <pose>0 0 0 0 0 0</pose>
      <always_on>false</always_on>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619445</min_angle>
            <max_angle>2.35619445</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_sick_front_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <!-- <namespace>/tb3</namespace> -->
          <remapping>~/out:=/sick_s30b/laser/scan0</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>sick_lidar0</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- sick LiDAR 1 controller -->
  <gazebo
    reference="sick_lidar1">
    <sensor type="ray" name="sick_LiDAR1_sensor">
      <pose>0 0 0 0 0 0</pose>
      <always_on>false</always_on>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619445</min_angle>
            <max_angle>2.35619445</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_sick_rear_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <!-- <namespace>/tb3</namespace> -->
          <remapping>~/out:=/sick_s30b/laser/scan1</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>sick_lidar1</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- kinect v2 controller -->
  <!-- <gazebo
    reference="kinect_v2">
    <sensor type="depth" name="upper_openni_camera">
      <always_on>1</always_on>
      <visualize>true</visualize>
      <camera>
        <horizontal_fov>2.8</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>B8G8R8</format>
        </image>
        <depth_camera>
        </depth_camera>
        <clip>
          <near>0.01</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin name="onepni_camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>10.0</updateRate>
        <cameraName>upper/camera</cameraName>
        <frameName>kinect_v2_cloud_link</frameName>
        <imageTopicName>upper/rgb/image_raw</imageTopicName>
        <depthImageTopicName>upper/depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>upper/depth/points</pointCloudTopicName>
        <cameraInfoTopicName>upper/rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>upper/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.4</pointCloudCutoff>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo> -->

  <gazebo reference="kinect_v2">
    <sensor type="depth" name="my_sensor">
      <!-- Set always_on only sensor, not on plugin -->
      <always_on>1</always_on>

      <!-- Set update_rate only sensor, not on plugin -->
      <update_rate>1</update_rate>

      <camera name="my_camera">
        <image>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.15</near>
          <far>30</far>
        </clip>
        <distortion>
          <k1>0.0</k1>
          <k2>0.0</k2>
          <k3>0.0</k3>
          <p1>0.0</p1>
          <p2>0.0</p2>
          <center>0.0 0.0</center>
        </distortion>
      </camera>

      <plugin name="plugin_name_whatever" filename="libgazebo_ros_camera.so">
        <!-- Change namespace, camera name and topics so -
             * Raw images are published to: /custom_ns/camera/custom_image
             * Depth images are published to: /custom_ns/camera/custom_image_depth
             * Raw image camera info is published to: /custom_ns/camera/custom_info_raw
             * Depth image camera info is published to: /custom_ns/camera/custom_info_depth
             * Point cloud is published to: /custom_ns/camera/custom_points
        -->
        <ros>
          <namespace>custom_ns</namespace>
          <remapping>camera/image_raw:=camera/custom_image</remapping>
          <remapping>camera/image_depth:=camera/custom_image_depth</remapping>
          <remapping>camera/camera_info:=camera/custom_info_raw</remapping>
          <remapping>camera/camera_info_depth:=camera/custom_info_depth</remapping>
          <remapping>camera/points:=camera/custom_points</remapping>
        </ros>

        <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
        <camera_name>camera</camera_name>

        <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
        <frame_name>kinect_v2_cloud_link</frame_name>

        <hack_baseline>0.07</hack_baseline>

        <!-- No need to repeat distortion parameters or to set autoDistortion -->

        <min_depth>0.001</min_depth>
      </plugin>
    </sensor>
  </gazebo>

  <!-- IMU sensor controller -->
  <gazebo reference="IMU_sensor">
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          <remapping>~/out:=zm_robot_imu</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Ultrasound sensor controller -->
  <gazebo
    reference="ultrasound_1">
    <sensor name="ultrasound_1" type="ray">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <pose>0.0 0 0.0 0 0 0</pose>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.03</min>
          <max>0.5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="bytes_ultrasound1" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=ultrasound_1</remapping>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
        <radiation_type>ultrasound</radiation_type>
        <frame_name>ultrasound_1</frame_name>
        <radiation_type>ultrasound</radiation_type>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo
    reference="ultrasound_2">
    <sensor name="ultrasound_2" type="ray">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <pose>0.0 0 0.0 0 0 0</pose>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.03</min>
          <max>0.5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="bytes_ultrasound2" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=ultrasound_2</remapping>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
        <radiation_type>ultrasound</radiation_type>
        <frame_name>ultrasound_2</frame_name>
        <radiation_type>ultrasound</radiation_type>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo
    reference="ultrasound_3">
    <sensor name="ultrasound_3" type="ray">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <pose>0.0 0 0.0 0 0 0</pose>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.03</min>
          <max>0.5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="bytes_ultrasound3" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=ultrasound_3</remapping>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
        <radiation_type>ultrasound</radiation_type>
        <frame_name>ultrasound_3</frame_name>
        <radiation_type>ultrasound</radiation_type>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo
    reference="ultrasound_4">
    <sensor name="ultrasound_4" type="ray">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <pose>0.0 0 0.0 0 0 0</pose>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.14835</min_angle>
            <max_angle>0.14835</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.03</min>
          <max>0.5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="bytes_ultrasound4" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=ultrasound_4</remapping>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
        <radiation_type>ultrasound</radiation_type>
        <frame_name>ultrasound_4</frame_name>
        <radiation_type>ultrasound</radiation_type>
      </plugin>
    </sensor>
  </gazebo>
</robot>